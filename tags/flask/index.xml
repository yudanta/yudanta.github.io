<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on Ydn&#39;s personal blog.</title>
    <link>https://yudanta.github.io/tags/flask/</link>
    <description>Recent content in Flask on Ydn&#39;s personal blog.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Jan 2019 19:19:08 +0700</lastBuildDate><atom:link href="https://yudanta.github.io/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flask Mongoengine, Multiple Databases With Alias</title>
      <link>https://yudanta.github.io/posts/flask-mongoengine-multiple-databases-with-alias/</link>
      <pubDate>Fri, 11 Jan 2019 19:19:08 +0700</pubDate>
      
      <guid>https://yudanta.github.io/posts/flask-mongoengine-multiple-databases-with-alias/</guid>
      <description>It&amp;rsquo;s common in some occasions our applications are consuming and storing data from two or more MongoDB databases, and if you are using Mongoengine as your database abstraction you are lucky enough that Mongoengine is capable to accessing multiple database without hassle, refering this documentation: http://docs.mongoengine.org/guide/connecting.html?highlight=alias#multiple-databases, we can connecting to multiple database and using alias or db_alias
Now, for accessing multiple database with Flask and Flask-Mongoengine, first define the database connection info and credentials in our flask config file config.</description>
    </item>
    
    <item>
      <title>How I Dockerize My Flask App With Pypy and Supervisord</title>
      <link>https://yudanta.github.io/posts/how-i-dockerize-my-flask-app-with-pypy-and-supervisord/</link>
      <pubDate>Wed, 19 Dec 2018 00:21:38 +0700</pubDate>
      
      <guid>https://yudanta.github.io/posts/how-i-dockerize-my-flask-app-with-pypy-and-supervisord/</guid>
      <description>There are bunch of ways how to deploy your Flask application, it can be directly with Flask&amp;rsquo;s built in http server or use UWSGI as gateway interface, with or without Nginx as your HTTP frontend. People also either run Flask application directly on their machine or as a container with docker.
In this post, I will share the way I deploy my Flask application. Lately, I prefer to use PyPy rather than using pure Python to achieve more speed processing time (thanks to its JIT Compiler), and use Gevent to handle more concurrency.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Ydn&#39;s personal blog.</title>
    <link>https://yudanta.github.io/tags/python/</link>
    <description>Recent content in Python on Ydn&#39;s personal blog.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Jan 2021 15:01:37 +0700</lastBuildDate><atom:link href="https://yudanta.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sending Whatsapp Message Using Whatsapp Web and Selenium</title>
      <link>https://yudanta.github.io/posts/sending-whatsapp-message-using-whatsapp-web-and-selenium/</link>
      <pubDate>Fri, 22 Jan 2021 15:01:37 +0700</pubDate>
      
      <guid>https://yudanta.github.io/posts/sending-whatsapp-message-using-whatsapp-web-and-selenium/</guid>
      <description>Long story short, a few days ago me and my friends need to send/blast an information about event details to our community members through WhatsApp messenger. Instead of sending to all recipients one-by-one and taking too long time to get the job done, I made simple scripts to automate sending a new WhatsApp message through WhatsApp web with Selenium and webdriver(gecko).
The Idea was very simple, I utilize webdriver to open a new chat-box, then use selenium to find the textbox, paste the text and hit the send button or sending enter key.</description>
    </item>
    
    <item>
      <title>Simple Asymetric Encryption With Python</title>
      <link>https://yudanta.github.io/posts/simple-asymetric-encryption-with-python/</link>
      <pubDate>Mon, 14 Sep 2020 12:55:59 +0700</pubDate>
      
      <guid>https://yudanta.github.io/posts/simple-asymetric-encryption-with-python/</guid>
      <description>So, first of all, this is just a snippet for those who courious and wants to know about asymetric encryption using private and public key to securing your data or communication. As we know, end to end encryption is very popular right now such as in your private messaging application (Whatsapp or Telegram), it is non deniable, one of our way to securing our communication in digital era.
The concept is very simmple, both parties are generating two kind of keys, one is private and one is public.</description>
    </item>
    
    <item>
      <title>Flask Mongoengine, Multiple Databases With Alias</title>
      <link>https://yudanta.github.io/posts/flask-mongoengine-multiple-databases-with-alias/</link>
      <pubDate>Fri, 11 Jan 2019 19:19:08 +0700</pubDate>
      
      <guid>https://yudanta.github.io/posts/flask-mongoengine-multiple-databases-with-alias/</guid>
      <description>It&amp;rsquo;s common in some occasions our applications are consuming and storing data from two or more MongoDB databases, and if you are using Mongoengine as your database abstraction you are lucky enough that Mongoengine is capable to accessing multiple database without hassle, refering this documentation: http://docs.mongoengine.org/guide/connecting.html?highlight=alias#multiple-databases, we can connecting to multiple database and using alias or db_alias
Now, for accessing multiple database with Flask and Flask-Mongoengine, first define the database connection info and credentials in our flask config file config.</description>
    </item>
    
    <item>
      <title>How I Dockerize My Flask App With Pypy and Supervisord</title>
      <link>https://yudanta.github.io/posts/how-i-dockerize-my-flask-app-with-pypy-and-supervisord/</link>
      <pubDate>Wed, 19 Dec 2018 00:21:38 +0700</pubDate>
      
      <guid>https://yudanta.github.io/posts/how-i-dockerize-my-flask-app-with-pypy-and-supervisord/</guid>
      <description>There are bunch of ways how to deploy your Flask application, it can be directly with Flask&amp;rsquo;s built in http server or use UWSGI as gateway interface, with or without Nginx as your HTTP frontend. People also either run Flask application directly on their machine or as a container with docker.
In this post, I will share the way I deploy my Flask application. Lately, I prefer to use PyPy rather than using pure Python to achieve more speed processing time (thanks to its JIT Compiler), and use Gevent to handle more concurrency.</description>
    </item>
    
  </channel>
</rss>
